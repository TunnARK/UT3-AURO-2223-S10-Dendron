{"pageProps":{"note":{"id":"u05yby9rwjvdfig01t96dxa","title":"TP1 - Connect 4","desc":"","updated":1668592904082,"created":1664542327128,"custom":{},"fname":"B1.COOSATR.TP1","type":"note","vault":{"fsPath":"vault"},"contentHash":"02164f951484db2eb2ec4c328a477f89","links":[{"from":{"fname":"B1.COOSATR","id":"tpyb41n9fi7ze4cw7z2cuxo","vaultName":"vault"},"type":"backlink","position":{"start":{"line":25,"column":3,"offset":584},"end":{"line":25,"column":36,"offset":617},"indent":[]},"value":"B1.COOSATR.TP1"}],"anchors":{"connect-4":{"type":"header","text":"Connect 4","value":"connect-4","line":14,"column":0,"depth":1},"objectifs":{"type":"header","text":"Objectifs","value":"objectifs","line":18,"column":0,"depth":2},"informations-utiles":{"type":"header","text":"Informations utiles","value":"informations-utiles","line":37,"column":0,"depth":1},"presentation-du-projet":{"type":"header","text":"Presentation du projet","value":"presentation-du-projet","line":56,"column":0,"depth":1},"class-cell":{"type":"header","text":"Class Cell","value":"class-cell","line":58,"column":0,"depth":2},"class-grid":{"type":"header","text":"Class Grid","value":"class-grid","line":65,"column":0,"depth":2},"class-player":{"type":"header","text":"Class Player","value":"class-player","line":120,"column":0,"depth":2},"class-game":{"type":"header","text":"Class Game","value":"class-game","line":129,"column":0,"depth":2},"execution":{"type":"header","text":"Execution","value":"execution","line":163,"column":0,"depth":1},"test_gamepy":{"type":"header","text":"test_game.py","value":"test_gamepy","line":171,"column":0,"depth":2},"travail-à-faire":{"type":"header","text":"Travail à faire","value":"travail-à-faire","line":214,"column":0,"depth":1},"notes-de-corrigé":{"type":"header","text":"Notes de Corrigé","value":"notes-de-corrigé","line":243,"column":0,"depth":1}},"children":[],"parent":"tpyb41n9fi7ze4cw7z2cuxo","data":{}},"body":"<h1 id=\"tp1---connect-4\">TP1 - Connect 4<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tp1---connect-4\"></a></h1>\n<blockquote>\n<p><strong>Avertissement:</strong>\nCette page peut contenir des fautes ! Envoyez-moi un message sur <a href=\"https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org\"><code>#UT3-AURO-M2-2223-Request:matrix.org</code></a> si vous en trouvez, merci.</p>\n</blockquote>\n<blockquote>\n<p>Cours donné par G. Saurel</p>\n</blockquote>\n<hr>\n<h1 id=\"connect-4\">Connect 4<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#connect-4\"></a></h1>\n<p>TP n°1 de Conception Orientée Objet pour le M2 auro.</p>\n<h2 id=\"objectifs\">Objectifs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#objectifs\"></a></h2>\n<ol>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_dumb_6</code> et implémenter\n<code>connect4.dump_ia.DumbIA.play</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_column_win</code> et améliorer\n<code>connect4.game.Grid.win</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_tie</code> et implémenter\n<code>connect4.game.Grid.tie</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau. <code>python -m connect4</code> devrait\négalement fonctionner.</li>\n<li>implémenter <code>connect4.console_player.ConsolePlayer.play</code> jusqu’à ce que que le jeu soit utilisable avec\n<code>python -m connect4 --player-a ConsolePlayer</code></li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_cheater</code> et implémenter <code>connect4.cheater_b</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau.</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_diag_win</code> et améliorer\n<code>connect4.game.Grid.win</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau\n<ul>\n<li>Completer la section <code>diagonal</code> de <code>connect4.game.Grid.win</code> jusqu'à ce que l'unittest fonctionne</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"informations-utiles\">Informations utiles<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#informations-utiles\"></a></h1>\n<p><a href=\"https://github.com/nim65s/connect4\">Repo GitHub pour le TP1 Connect4</a></p>\n<p>N.B.:</p>\n<ul>\n<li>Python fait croire que c'est un code interpreté (i.e. qui n'a pas besoin de compilation) alors quil conserve un cache de compilation en interne</li>\n<li>Pypy lui est un code interpreté car il exécute directement</li>\n<li>Appeler des méthodes en COO:\n  Grid est la classe    \n  grid est une instance de la classe Grid\n  Il y a deux manière d'appeler la méthode place de la classe Grid\n<ul>\n<li>Grid.place(grid,j,Cell.B) aura besoin que l'on précise sur quel objet appliquer cette méthode</li>\n<li>grid.place(j,Cell.B) n'aura pas besoin de préciser l'objet</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"presentation-du-projet\">Presentation du projet<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#presentation-du-projet\"></a></h1>\n<h2 id=\"class-cell\">Class Cell<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-cell\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    EMPTY <span class=\"token operator\">=</span> <span class=\"token string\">\".\"</span>\n    A <span class=\"token operator\">=</span> <span class=\"token string\">\"X\"</span>\n    B <span class=\"token operator\">=</span> <span class=\"token string\">\"O\"</span>\n</code></pre>\n<h2 id=\"class-grid\">Class Grid<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-grid\"></a></h2>\n<blockquote>\n<p>Toute les méthodes de toutes les classes continnent des <code>self</code> ! (Hors exception)</p>\n</blockquote>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">:</span>\n    lines <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    columns <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Cell<span class=\"token punctuation\">.</span>EMPTY<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>columns <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lines <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            ret <span class=\"token operator\">+=</span> <span class=\"token string\">\"|\"</span>\n            <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                ret <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value\n            ret <span class=\"token operator\">+=</span> <span class=\"token string\">\"|\\n\"</span>\n        ret <span class=\"token operator\">+=</span> <span class=\"token string\">\"+\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">+</span> <span class=\"token string\">\"+\\n\"</span>\n        ret <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span>\n        <span class=\"token keyword\">return</span> ret\n\n    <span class=\"token comment\"># Place le jeton dans une colonne en le stoppant sur la premiere ligne libre (si elle existe)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">place</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">:</span> Cell<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Cell<span class=\"token punctuation\">.</span>EMPTY<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cell\n                <span class=\"token keyword\">return</span> line\n        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Column </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>column<span class=\"token punctuation\">}</span></span><span class=\"token string\"> is full.\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Verifier si 4 jetons sont alignees horizentalement, verticalement ou diagmt</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">win</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        adjacent <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># compteur</span>\n        color <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># Horizontal</span>\n        <span class=\"token keyword\">for</span> cell <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">[</span>line<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> cell <span class=\"token operator\">==</span> color<span class=\"token punctuation\">:</span>\n                adjacent <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token keyword\">if</span> adjacent <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                adjacent <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n        <span class=\"token comment\"># TODO: Vertical</span>\n        <span class=\"token comment\"># TODO: Diagonal</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token comment\"># Condition d arret en cas de match nul</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">tie</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># TODO</span>\n        <span class=\"token comment\"># verifier si toutes les cases sont deja remplis</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n</code></pre>\n<h2 id=\"class-player\">Class Player<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-player\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># fonction qui necessite de savoir l etat de la grille (donc en parametre)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">:</span> Grid<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> NotImplementedError\n</code></pre>\n<h2 id=\"class-game\">Class Game<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-game\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> player_a<span class=\"token punctuation\">:</span> Player<span class=\"token punctuation\">,</span> player_b<span class=\"token punctuation\">:</span> Player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>player_a <span class=\"token operator\">=</span> player_a\n        self<span class=\"token punctuation\">.</span>player_b <span class=\"token operator\">=</span> player_b\n        self<span class=\"token punctuation\">.</span>grid <span class=\"token operator\">=</span> Grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>play<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>player_a<span class=\"token punctuation\">,</span> Cell<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A wins !\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>tie<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tie.\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>play<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>player_b<span class=\"token punctuation\">,</span> Cell<span class=\"token punctuation\">.</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Attention different de player.play</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B wins !\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>tie<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tie.\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">:</span> Player<span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">:</span> Cell<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        column <span class=\"token operator\">=</span> player<span class=\"token punctuation\">.</span>play<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">)</span>\n        line <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>place<span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">.</span>win<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"execution\">Execution<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#execution\"></a></h1>\n<ul>\n<li><a href=\"/UT3-AURO-2223-S10-Dendron/\"><strong>main</strong>.py</a></li>\n</ul>\n<p>Fichier qui crée un instance du jeu game avec un player A et B pour ensuite lancer le <code>game.main</code></p>\n<p>Lancer ce fichier ne fonctionnera pas plustot lancer les tests</p>\n<h2 id=\"test_gamepy\">test_game.py<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#test_gamepy\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/nim65s/connect4/blob/main/tests/test_game.py\">lien vers le fichier test_game.py</a></li>\n</ul>\n<ol>\n<li>\n<p>Lancer la commande <code>python3 -m unittest</code>\nRetourne:</p>\n<pre><code>ssss..ss\n----------------------------------------------------------------------\nRan 8 tests in 0.001s\n\nOK (skipped=6)\n</code></pre>\n</li>\n<li>\n<p>Vérifier que le test fonctionne réellement en y créant une erreur voulue</p>\n<ul>\n<li>Enlever une ligne de la grille</li>\n<li>Relancer le test\nRetourne:</li>\n</ul>\n<pre><code>ssssF.ss\n======================================================================\nFAIL: test_grid_str (tests.test_game.TestGame)\n----------------------------------------------------------------------\nTraceback (most recent call last):\nFile \"/home/tunn/Documents/GitHub/connect4/tests/test_game.py\", line 20, in test_grid_str\n    self.assertEqual(\"\\n\" + str(grid), GRID_DUMB_6)\nAssertionError: '\\n|.[23 chars].....|\\n|.......|\\n|.......|\\n|XOXOXO.|\\n+-------+\\n 0123456\\n' != '\\n|.[23 chars].....|\\n|.......|\\n|XOXOXO.|\\n+-------+\\n 0123456\\n'\n\n- |.......|\n|.......|\n|.......|\n|.......|\n|.......|\n|XOXOXO.|\n+-------+\n0123456\n</code></pre>\n</li>\n</ol>\n<pre><code>----------------------------------------------------------------------\nRan 8 tests in 0.001s\n\nFAILED (failures=1, skipped=6)\n```\n</code></pre>\n<h1 id=\"travail-à-faire\">Travail à faire<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#travail-à-faire\"></a></h1>\n<ol>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_dumb_6</code> et implémenter\n<code>connect4.dump_ia.DumbIA.play</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau\n<ul>\n<li>L'IA doit simplement jouer une colonne si celle-ci est vide</li>\n<li>Faire en sorte que l'on obtienne cette grille\n<pre><code>|.......|\n|.......|\n|.......|\n|.......|\n|.......|\n|XOXOXO.|\n+-------+\n0123456\n</code></pre>\n</li>\n</ul>\n</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_column_win</code> et améliorer\n<code>connect4.game.Grid.win</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau\n<ul>\n<li>Completer la section <code>vertical</code> de <code>connect4.game.Grid.win</code> jusqu'à ce que l'unittest fonctionne</li>\n</ul>\n</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_tie</code> et implémenter\n<code>connect4.game.Grid.tie</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau. <code>python -m connect4</code> devrait\négalement fonctionner.</li>\n<li>implémenter <code>connect4.console_player.ConsolePlayer.play</code> jusqu’à ce que que le jeu soit utilisable avec\n<code>python -m connect4 --player-a ConsolePlayer</code></li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_cheater</code> et implémenter <code>connect4.cheater_b</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau.</li>\n<li>commenter le décorateur <code>skip</code> pour <code>tests.test_game.TestGame.test_diag_win</code> et améliorer\n<code>connect4.game.Grid.win</code> jusqu’à ce que <code>python -m unittest</code> fonctionne à nouveau\n<ul>\n<li>Completer la section <code>diagonal</code> de <code>connect4.game.Grid.win</code> jusqu'à ce que l'unittest fonctionne</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"notes-de-corrigé\">Notes de Corrigé<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes-de-corrigé\"></a></h1>\n<p>Un façon de parcourrir un tableau de façon plus optimisé que de faire une double boucle</p>\n<pre><code>ret.grid[n // ret.columns][n % ret.columns] = deserialize_cell(cell)\n# //: div entier\n# %: modulo\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/UT3-AURO-2223-S10-Dendron/notes/tpyb41n9fi7ze4cw7z2cuxo\">COOSATR - Conception Orientee Objet</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Portail Digital du M2 AURO 2022/2023 de RKA","desc":"","updated":1669033598588,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4d5454b71088c3c74fdb20ab3ed32dab","links":[],"anchors":{"idée":{"type":"header","text":"Idée","value":"idée","line":11,"column":0,"depth":1},"liens-utiles":{"type":"header","text":"Liens utiles","value":"liens-utiles","line":17,"column":0,"depth":1},"remerciement":{"type":"header","text":"Remerciement","value":"remerciement","line":28,"column":0,"depth":1},"contact":{"type":"header","text":"Contact","value":"contact","line":36,"column":0,"depth":1}},"children":["wmc6wolqmlygiqlfcwihsso","43j78t90ywskb5ji2dl1dv6","wifhrlf5o1cm74d5nvmwtmd","g54kxj2u0t1wl4x6uo6vgbt","90wm5tdnz2dnqs3098ttvor"],"parent":null,"data":{},"body":"\n> **Avertissement:**\nCette page peut contenir des fautes ! Envoyez-moi un message sur [`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org) si vous en trouvez, merci.\n\n# Idée\n\nCe projet a pour but de regrouper mes notes de cours en utilisant les outils offerts par [Dendron](dendron.so) pour structurer et hiérarchiser l'information.\n\nDe cette façon, ce portail devient un \"one-stop-shop\" pour accéder et/ou retrouver les connaissances acquises durant le master.\n\n# Liens utiles\n\nPour plus d'informations:\n- [Lien officiel du Master AURO de l'Université Paul Sabatier](https://www.univ-tlse3.fr/master-parcours-automatique-et-robotique-auro)\n- [Lien vers la page moodle des cours](https://moodle.univ-tlse3.fr/course/index.php?categoryid=1269)\n- [Dendron Official Website](dendron.so)\n- [Dendron Wiki](https://wiki.dendron.so/)\n- [Dendron's Discord](https://discord.com/invite/xrKTUStHNZ)\n\n\n\n# Remerciement\n\nUn grand merci à GEA pour avoir mis à disposition les scans de ses notes !\n\nJe tiens aussi à remercier mes enseignants pour m'autoriser à prendre en photo les tableaux.\n\nLastly, a big thank you to everyone in [Dendron](dendron.so)'s team and the community for all their support.\n\n# Contact\n\nUn salon [Element](https://element.io/) est mis à disposition des lecteurs pour toutes questions/sugesstions ou pour faire remonter des erreurs/typos.\n\n\n[`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org)\n\n---\n\n> This website has been generated using [Dendron](dendron.so) and [GitHub Actions](https://github.com/features/actions).\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"assetsPrefix":"/UT3-AURO-2223-S10-Dendron","siteUrl":"https://tunnark.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}