{"pageProps":{"note":{"id":"yqj8r3zj8shhesk8d2f5uhw","title":"Préparation des TPs","desc":"","updated":1663149811859,"created":1663146830761,"custom":{},"fname":"B1.COOSATR.PrepTP","type":"note","vault":{"fsPath":"vault"},"contentHash":"af1e8fd3d8b9276fe27d979df2ca5c78","links":[{"from":{"fname":"B1.COOSATR","id":"tpyb41n9fi7ze4cw7z2cuxo","vaultName":"vault"},"type":"backlink","position":{"start":{"line":24,"column":3,"offset":540},"end":{"line":24,"column":44,"offset":581},"indent":[]},"value":"B1.COOSATR.PrepTP"}],"anchors":{"creation-du-repo":{"type":"header","text":"Creation du Repo","value":"creation-du-repo","line":8,"column":0,"depth":1},"objectifs":{"type":"header","text":"Objectifs","value":"objectifs","line":14,"column":0,"depth":2},"class-formes":{"type":"header","text":"Class Formes","value":"class-formes","line":19,"column":0,"depth":2},"etape-1":{"type":"header","text":"Etape 1","value":"etape-1","line":21,"column":0,"depth":3},"etape-2":{"type":"header","text":"Etape 2","value":"etape-2","line":36,"column":0,"depth":3},"etape-3":{"type":"header","text":"Etape 3","value":"etape-3","line":56,"column":0,"depth":3},"etape-4":{"type":"header","text":"Etape 4","value":"etape-4","line":60,"column":0,"depth":3},"etape-5":{"type":"header","text":"Etape 5","value":"etape-5","line":88,"column":0,"depth":3},"etape-6":{"type":"header","text":"Etape 6","value":"etape-6","line":146,"column":0,"depth":3},"etape-7":{"type":"header","text":"Etape 7","value":"etape-7","line":205,"column":0,"depth":3},"etape-8":{"type":"header","text":"Etape 8","value":"etape-8","line":271,"column":0,"depth":3}},"children":[],"parent":"tpyb41n9fi7ze4cw7z2cuxo","data":{}},"body":"<h1 id=\"préparation-des-tps\">Préparation des TPs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#préparation-des-tps\"></a></h1>\n<h1 id=\"creation-du-repo\">Creation du Repo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#creation-du-repo\"></a></h1>\n<ul>\n<li>on utilise le template pour creer un repo <code>formes</code>\n<ul>\n<li>lien vers le repo <a href=\"https://github.com/nim65s/formes.git\">formes</a></li>\n</ul>\n</li>\n<li><code>git clone https://github.com/nim65s/formes.git</code></li>\n</ul>\n<h2 id=\"objectifs\">Objectifs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#objectifs\"></a></h2>\n<ul>\n<li>Découvrir Python</li>\n<li>Utiliser bcp les classes et les hierarchies (meme si ce n'est pas necessaire pour faire du python mais ici cest pour faire une pierre deux coups)</li>\n</ul>\n<h2 id=\"class-formes\">Class Formes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-formes\"></a></h2>\n<h3 id=\"etape-1\">Etape 1<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-1\"></a></h3>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n</code></pre>\n<ul>\n<li>lancer <code>iphython</code></li>\n<li><code>from formes import Forme</code>\n<ul>\n<li>on import la class</li>\n</ul>\n</li>\n<li><code>f = Forme()</code>\n<ul>\n<li>on cree un objet f</li>\n</ul>\n</li>\n<li><code>f.color</code> retourne alors <code>black</code></li>\n</ul>\n<h3 id=\"etape-2\">Etape 2<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-2\"></a></h3>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\"\"\"</span>\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n</code></pre>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>Depuis python 3.6 on utilise la syntax <code>f\"... {..}\"</code>, il existe deux autres façon</li>\n</ul>\n<h3 id=\"etape-3\">Etape 3<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-3\"></a></h3>\n<p>Installer balck en copiant le fichier `.pre-commit-config</p>\n<h3 id=\"etape-4\">Etape 4<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-4\"></a></h3>\n<p>Automatiser la compilation</p>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\n    \n    >>> f = Forme()\n    >>> print(f)\n    forme indefinie de couleur bleue    \n    \"\"\"</span>\n\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span>\n\n</code></pre>\n<ul>\n<li>faire des commit a chaque fois</li>\n</ul>\n<h3 id=\"etape-5\">Etape 5<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-5\"></a></h3>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\n    \n    >>> f = Forme()\n    >>> print(f)\n    forme indefinie de couleur bleue    \n    \"\"\"</span>\n\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rond</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"rond de rayon </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Quadrilatere</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    c<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    d<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># methode dunder representant une classe</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"quadrilat </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> Forme<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> Rond<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> Quadrilatere<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<ul>\n<li>methode init c'est pour le constructeur</li>\n<li>methode str pour gerer les char</li>\n</ul>\n<h3 id=\"etape-6\">Etape 6<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-6\"></a></h3>\n<p>Ajouter deux rond</p>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\n    \n    >>> f = Forme()\n    >>> print(f)\n    forme indefinie de couleur bleue    \n    \"\"\"</span>\n\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rond</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"rond de rayon </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Quadrilatere</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    c<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    d<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># methode dunder representant une classe</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"quadrilat </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> Forme<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> Rond<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> Quadrilatere<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"etape-7\">Etape 7<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-7\"></a></h3>\n<p>Comment reconnaitre une forme de quad</p>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\n    \n    >>> f = Forme()\n    >>> print(f)\n    forme indefinie de couleur bleue    \n    \"\"\"</span>\n\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rond</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"rond de rayon </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Quadrilatere</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    c<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    d<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">specialite</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> slef<span class=\"token punctuation\">.</span>b <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>d\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"square\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> slef<span class=\"token punctuation\">.</span>c <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>b\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"rectangle\"</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> Forme<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> Rond<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> Quadrilatere<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h3 id=\"etape-8\">Etape 8<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#etape-8\"></a></h3>\n<p>Comment reconnaitre des formes</p>\n<p>formes.py:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Forme</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Classe de base pour les autres formes\n    \n    >>> f = Forme()\n    >>> print(f)\n    forme indefinie de couleur bleue    \n    \"\"\"</span>\n\n\n    color<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span> <span class=\"token comment\"># un premier attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"forme indefinie de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token comment\">#f coller a \" va remplacer {..} par la valeur de f</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rond</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"rond de rayon </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> de couleur </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Quadrilatere</span><span class=\"token punctuation\">(</span>Forme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    c<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n    d<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span>    <span class=\"token comment\">#attribut</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># constructeur</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a\n        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b\n        self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c\n        self<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">specialite</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> slef<span class=\"token punctuation\">.</span>b <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>c <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>d\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"square\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">==</span> slef<span class=\"token punctuation\">.</span>c <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>b\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"rectangle\"</span>\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>dimensions<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dimensions<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> Forme<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    r <span class=\"token operator\">=</span> Rond<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n    q <span class=\"token operator\">=</span> Quadrilatere<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<ul>\n<li>\n<p>En python, les arguments sont:</p>\n<ul>\n<li>soit positionnel (pour les valeurs) syntaxé avec <code>*</code> (convention: appelé <code>*args</code>)</li>\n<li>soit nommees (pour les noms) syntaxé avec <code>**</code> (convention: appelé <code>**kwargs</code>)</li>\n</ul>\n</li>\n<li>\n<p>methode <code>super().__init__(**kwargs)</code> va importer le init de la classe mère et</p>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/UT3-AURO-2223-S10-Dendron/notes/tpyb41n9fi7ze4cw7z2cuxo\">COOSATR - Conception Orientee Objet</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Portail Digital du M2 AURO 2022/2023 de RKA","desc":"","updated":1669033598588,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4d5454b71088c3c74fdb20ab3ed32dab","links":[],"anchors":{"idée":{"type":"header","text":"Idée","value":"idée","line":11,"column":0,"depth":1},"liens-utiles":{"type":"header","text":"Liens utiles","value":"liens-utiles","line":17,"column":0,"depth":1},"remerciement":{"type":"header","text":"Remerciement","value":"remerciement","line":28,"column":0,"depth":1},"contact":{"type":"header","text":"Contact","value":"contact","line":36,"column":0,"depth":1}},"children":["wmc6wolqmlygiqlfcwihsso","43j78t90ywskb5ji2dl1dv6","wifhrlf5o1cm74d5nvmwtmd","g54kxj2u0t1wl4x6uo6vgbt","90wm5tdnz2dnqs3098ttvor"],"parent":null,"data":{},"body":"\n> **Avertissement:**\nCette page peut contenir des fautes ! Envoyez-moi un message sur [`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org) si vous en trouvez, merci.\n\n# Idée\n\nCe projet a pour but de regrouper mes notes de cours en utilisant les outils offerts par [Dendron](dendron.so) pour structurer et hiérarchiser l'information.\n\nDe cette façon, ce portail devient un \"one-stop-shop\" pour accéder et/ou retrouver les connaissances acquises durant le master.\n\n# Liens utiles\n\nPour plus d'informations:\n- [Lien officiel du Master AURO de l'Université Paul Sabatier](https://www.univ-tlse3.fr/master-parcours-automatique-et-robotique-auro)\n- [Lien vers la page moodle des cours](https://moodle.univ-tlse3.fr/course/index.php?categoryid=1269)\n- [Dendron Official Website](dendron.so)\n- [Dendron Wiki](https://wiki.dendron.so/)\n- [Dendron's Discord](https://discord.com/invite/xrKTUStHNZ)\n\n\n\n# Remerciement\n\nUn grand merci à GEA pour avoir mis à disposition les scans de ses notes !\n\nJe tiens aussi à remercier mes enseignants pour m'autoriser à prendre en photo les tableaux.\n\nLastly, a big thank you to everyone in [Dendron](dendron.so)'s team and the community for all their support.\n\n# Contact\n\nUn salon [Element](https://element.io/) est mis à disposition des lecteurs pour toutes questions/sugesstions ou pour faire remonter des erreurs/typos.\n\n\n[`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org)\n\n---\n\n> This website has been generated using [Dendron](dendron.so) and [GitHub Actions](https://github.com/features/actions).\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"assetsPrefix":"/UT3-AURO-2223-S10-Dendron","siteUrl":"https://tunnark.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}