{"pageProps":{"note":{"id":"5gjqscwy0slqplwg2zdsmqj","title":"Conception Orientée Objet, 101","desc":"","updated":1664743934732,"created":1664743580156,"custom":{},"fname":"B1.COOSATR.BackUpTalks20221001.coo-101","type":"note","vault":{"fsPath":"vault"},"contentHash":"2788c6e0c686be8c23fb7b076ef54177","links":[],"anchors":{"this-presentation":{"type":"header","text":"This presentation","value":"this-presentation","line":26,"column":0,"depth":2},"available-at":{"type":"header","text":"Available at","value":"available-at","line":28,"column":0,"depth":3},"under-license":{"type":"header","text":"Under License","value":"under-license","line":35,"column":0,"depth":3},"this-presentation-continued":{"type":"header","text":"This presentation (continued)","value":"this-presentation-continued","line":45,"column":0,"depth":2},"source":{"type":"header","text":"Source","value":"source","line":47,"column":0,"depth":3},"discussions":{"type":"header","text":"Discussions","value":"discussions","line":54,"column":0,"depth":3},"hello-world":{"type":"header","text":"Hello world","value":"hello-world","line":60,"column":0,"depth":1},"hello-world-c":{"type":"header","text":"Hello world: C++","value":"hello-world-c","line":62,"column":0,"depth":2},"hello-world-python":{"type":"header","text":"Hello world: Python","value":"hello-world-python","line":79,"column":0,"depth":2},"data-types":{"type":"header","text":"Data types","value":"data-types","line":95,"column":0,"depth":2},"c":{"type":"header","text":"C++","value":"c","line":97,"column":0,"depth":3},"python":{"type":"header","text":"Python","value":"python","line":108,"column":0,"depth":3},"control-flow":{"type":"header","text":"Control flow","value":"control-flow","line":116,"column":0,"depth":1},"functions":{"type":"header","text":"Functions","value":"functions","line":118,"column":0,"depth":2},"c-1":{"type":"header","text":"C++","value":"c-1","line":120,"column":0,"depth":3},"python-1":{"type":"header","text":"Python","value":"python-1","line":130,"column":0,"depth":3},"conditions-c":{"type":"header","text":"Conditions: C++","value":"conditions-c","line":138,"column":0,"depth":2},"conditions-python":{"type":"header","text":"Conditions: Python","value":"conditions-python","line":152,"column":0,"depth":2},"loops-while":{"type":"header","text":"Loops: while","value":"loops-while","line":165,"column":0,"depth":2},"c-2":{"type":"header","text":"C++","value":"c-2","line":167,"column":0,"depth":3},"python-2":{"type":"header","text":"Python","value":"python-2","line":179,"column":0,"depth":3},"walrus":{"type":"header","text":"Walrus","value":"walrus","line":189,"column":0,"depth":3},"loops-break---c":{"type":"header","text":"Loops: break - C++","value":"loops-break---c","line":196,"column":0,"depth":2},"loops-break---python":{"type":"header","text":"Loops: break - Python","value":"loops-break---python","line":211,"column":0,"depth":2},"loops-for--break---c":{"type":"header","text":"Loops: for / break - C++","value":"loops-for--break---c","line":223,"column":0,"depth":2},"loops-for--break---python":{"type":"header","text":"Loops: for / break - Python","value":"loops-for--break---python","line":238,"column":0,"depth":2},"loops-continue":{"type":"header","text":"Loops: continue","value":"loops-continue","line":249,"column":0,"depth":2},"c-3":{"type":"header","text":"C++","value":"c-3","line":251,"column":0,"depth":3},"python-3":{"type":"header","text":"Python","value":"python-3","line":264,"column":0,"depth":3},"loops-containers":{"type":"header","text":"Loops: containers","value":"loops-containers","line":273,"column":0,"depth":2},"c-4":{"type":"header","text":"C++","value":"c-4","line":275,"column":0,"depth":3},"python-4":{"type":"header","text":"Python","value":"python-4","line":287,"column":0,"depth":3},"objects":{"type":"header","text":"Objects","value":"objects","line":295,"column":0,"depth":1},"c-5":{"type":"header","text":"C++","value":"c-5","line":297,"column":0,"depth":2},"python-5":{"type":"header","text":"Python","value":"python-5","line":319,"column":0,"depth":2},"inheritance-c":{"type":"header","text":"Inheritance: C++","value":"inheritance-c","line":339,"column":0,"depth":2},"python-6":{"type":"header","text":"Python","value":"python-6","line":358,"column":0,"depth":2}},"children":[],"parent":"s9ur71r5msa45x1cx0qeful","data":{}},"body":"<h1 id=\"conception-orientée-objet-101\">Conception Orientée Objet, 101<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conception-orientée-objet-101\"></a></h1>\n<p><strong>Source:</strong> <a href=\"https://gitlab.laas.fr/gsaurel/talks\">GitLab Repo 'Talks'</a></p>\n<hr>\n<!--\nid: gzwe38pthzigt8bfmhe7e8q\ntitle: 'Conception Orientée Objet, 101'\ndesc: ''\nupdated: 1664628177972\ncreated: 1664628177972\nsubtitle: Université Toulouse Paul Sabatier - KEAR9RA1\ntheme: laas\ndate: '2022-08-31T00:00:00.000Z'\nauthor: Guilhem Saurel\nmainfont: Source Serif 4\nmonofont: Source Code Pro\n-->\n<h2 id=\"this-presentation\">This presentation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#this-presentation\"></a></h2>\n<h3 id=\"available-at\">Available at<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#available-at\"></a></h3>\n<p>\\centering</p>\n<p><a href=\"https://homepages.laas.fr/gsaurel/talks/conception-orientee-objet-101.pdf\"><code>https://homepages.laas.fr/gsaurel/talks/ conception-orientee-objet-101.pdf</code></a></p>\n<h3 id=\"under-license\">Under License<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#under-license\"></a></h3>\n<p>\\centering</p>\n<p><img src=\"/UT3-AURO-2223-S10-Dendron/media/cc.png\" alt=\"CC\" style=\"\">\n<img src=\"/UT3-AURO-2223-S10-Dendron/media/by.png\" alt=\"BY\" style=\"\">\n<img src=\"/UT3-AURO-2223-S10-Dendron/media/sa.png\" alt=\"SA\" style=\"\"></p>\n<p><a href=\"https://creativecommons.org/licenses/by-sa/4.0/\">https://creativecommons.org/licenses/by-sa/4.0/</a></p>\n<h2 id=\"this-presentation-continued\">This presentation (continued)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#this-presentation-continued\"></a></h2>\n<h3 id=\"source\">Source<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#source\"></a></h3>\n<p>\\centering</p>\n<p><a href=\"https://gitlab.laas.fr/gsaurel/talks/-/blob/main/conception-orientee-objet-101.md\"><code>https://gitlab.laas.fr/gsaurel/talks : conception-orientee-objet-101.md</code></a></p>\n<h3 id=\"discussions\">Discussions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#discussions\"></a></h3>\n<p>\\centering</p>\n<p>\\url{<a href=\"https://matrix.to/%5C#/%5C#conception-orientee-objet:laas.fr%7D\">https://matrix.to/\\#/\\#conception-orientee-objet:laas.fr}</a></p>\n<h1 id=\"hello-world\">Hello world<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#hello-world\"></a></h1>\n<h2 id=\"hello-world-c\">Hello world: C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#hello-world-c\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;iostream></span></span>\n<span class=\"token keyword\">auto</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"hello\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>. . .</p>\n<pre><code>╰─>$ g++ hello.cpp &#x26;&#x26; ./a.out\nhello\n</code></pre>\n<h2 id=\"hello-world-python\">Hello world: Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#hello-world-python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>. . .</p>\n<pre><code>╰─>$ chmod +x hello.py &#x26;&#x26; ./hello.py\nhello\n</code></pre>\n<h2 id=\"data-types\">Data types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-types\"></a></h2>\n<h3 id=\"c\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c\"></a></h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> ga<span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// int</span>\n<span class=\"token keyword\">auto</span> bu<span class=\"token punctuation\">{</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// double</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span><span class=\"token keyword\">const</span> zo<span class=\"token punctuation\">{</span><span class=\"token string\">\"tau\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// const char *const</span>\nstd<span class=\"token double-colon punctuation\">::</span>string meu<span class=\"token punctuation\">{</span><span class=\"token string\">\"pi\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"python\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\">ga<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nbu<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span>\nzo<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"pi\"</span>\n</code></pre>\n<h1 id=\"control-flow\">Control flow<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#control-flow\"></a></h1>\n<h2 id=\"functions\">Functions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#functions\"></a></h2>\n<h3 id=\"c-1\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c-1\"></a></h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> second<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> first <span class=\"token operator\">+</span> second<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"python-1\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-1\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> first <span class=\"token operator\">+</span> second\n</code></pre>\n<h2 id=\"conditions-c\">Conditions: C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conditions-c\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temperature <span class=\"token operator\">></span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Too hot\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">turn_cooler_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temperature <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Too cold\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">turn_heater_on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Lucky people !\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"conditions-python\">Conditions: Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conditions-python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> temperature <span class=\"token operator\">></span> <span class=\"token number\">26</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Too hot\"</span><span class=\"token punctuation\">)</span>\n    turn_cooler_on<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> temperature <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Too cold\"</span><span class=\"token punctuation\">)</span>\n    turn_heater_on<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lucky people !\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"loops-while\">Loops: while<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-while\"></a></h2>\n<h3 id=\"c-2\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c-2\"></a></h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> user_input<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>user_input <span class=\"token operator\">!=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"guess: \"</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> user_input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"python-2\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-2\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\">user_input<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> user_input <span class=\"token operator\">!=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">:</span>\n    user_input <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"guess: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"walrus\">Walrus<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#walrus\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>user_input <span class=\"token operator\">:=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"guess: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"it's not\"</span><span class=\"token punctuation\">,</span> user_input<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"loops-break---c\">Loops: break - C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-break---c\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> user_input<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"guess: \"</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cin <span class=\"token operator\">>></span> user_input<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user_input <span class=\"token operator\">==</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Yes !\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"I's not \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> user_input <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"loops-break---python\">Loops: break - Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-break---python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">user_input<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    user_input <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"guess: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> user_input <span class=\"token operator\">==</span> <span class=\"token number\">42</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Yes !\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's not\"</span><span class=\"token punctuation\">,</span> user_input<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"loops-for--break---c\">Loops: for / break - C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-for--break---c\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;cstdlib></span></span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"iteration \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> i <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">auto</span> rand <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">static_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rand <span class=\"token operator\">/</span> RAND_MAX <span class=\"token operator\">></span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"loops-for--break---python\">Loops: for / break - Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-for--break---python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> random\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iteration\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n</code></pre>\n<h2 id=\"loops-continue\">Loops: continue<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-continue\"></a></h2>\n<h3 id=\"c-3\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c-3\"></a></h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> i<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"iteration \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> i <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"python-3\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-3\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iteration\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"loops-containers\">Loops: containers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loops-containers\"></a></h2>\n<h3 id=\"c-4\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c-4\"></a></h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> Colors <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&#x3C;</span>std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\nColors colors<span class=\"token punctuation\">{</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">&#x26;</span>color<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> color <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>. . .</p>\n<h3 id=\"python-4\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-4\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\">colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> color <span class=\"token keyword\">in</span> colors<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"objects\">Objects<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#objects\"></a></h1>\n<h2 id=\"c-5\">C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#c-5\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\">\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Robot</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">auto</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> battery <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">auto</span> <span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> battery<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">int</span> battery<span class=\"token punctuation\">{</span><span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">auto</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">auto</span> robot <span class=\"token operator\">=</span> Robot<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> robot<span class=\"token punctuation\">.</span><span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"% remaining\\n\"</span><span class=\"token punctuation\">;</span>\n  robot<span class=\"token punctuation\">.</span><span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> robot<span class=\"token punctuation\">.</span><span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"% remaining\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"python-5\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-5\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Robot</span><span class=\"token punctuation\">:</span>\n    battery <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>battery <span class=\"token operator\">-=</span> <span class=\"token number\">5</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>battery\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    robot <span class=\"token operator\">=</span> Robot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">.</span>get_battery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"% remaining\"</span><span class=\"token punctuation\">)</span>\n    robot<span class=\"token punctuation\">.</span>work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">.</span>get_battery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"% remaining\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"inheritance-c\">Inheritance: C++<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#inheritance-c\"></a></h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\">\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LeggedRobot</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Robot</span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">auto</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> battery <span class=\"token operator\">-=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">auto</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">auto</span> robot <span class=\"token operator\">=</span> LeggedRobot<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> robot<span class=\"token punctuation\">.</span><span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"% remaining\\n\"</span><span class=\"token punctuation\">;</span>\n  robot<span class=\"token punctuation\">.</span><span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  robot<span class=\"token punctuation\">.</span><span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&#x3C;&#x3C;</span> robot<span class=\"token punctuation\">.</span><span class=\"token function\">get_battery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"% remaining\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"python-6\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-6\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LeggedRobot</span><span class=\"token punctuation\">(</span>Robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>battery <span class=\"token operator\">-=</span> <span class=\"token number\">10</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    robot <span class=\"token operator\">=</span> LeggedRobot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">.</span>get_battery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"% remaining\"</span><span class=\"token punctuation\">)</span>\n    robot<span class=\"token punctuation\">.</span>work<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    robot<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">.</span>get_battery<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"% remaining\"</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Portail Digital du M2 AURO 2022/2023 de RKA","desc":"","updated":1669033598588,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"4d5454b71088c3c74fdb20ab3ed32dab","links":[],"anchors":{"idée":{"type":"header","text":"Idée","value":"idée","line":11,"column":0,"depth":1},"liens-utiles":{"type":"header","text":"Liens utiles","value":"liens-utiles","line":17,"column":0,"depth":1},"remerciement":{"type":"header","text":"Remerciement","value":"remerciement","line":28,"column":0,"depth":1},"contact":{"type":"header","text":"Contact","value":"contact","line":36,"column":0,"depth":1}},"children":["wmc6wolqmlygiqlfcwihsso","43j78t90ywskb5ji2dl1dv6","wifhrlf5o1cm74d5nvmwtmd","g54kxj2u0t1wl4x6uo6vgbt","90wm5tdnz2dnqs3098ttvor"],"parent":null,"data":{},"body":"\n> **Avertissement:**\nCette page peut contenir des fautes ! Envoyez-moi un message sur [`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org) si vous en trouvez, merci.\n\n# Idée\n\nCe projet a pour but de regrouper mes notes de cours en utilisant les outils offerts par [Dendron](dendron.so) pour structurer et hiérarchiser l'information.\n\nDe cette façon, ce portail devient un \"one-stop-shop\" pour accéder et/ou retrouver les connaissances acquises durant le master.\n\n# Liens utiles\n\nPour plus d'informations:\n- [Lien officiel du Master AURO de l'Université Paul Sabatier](https://www.univ-tlse3.fr/master-parcours-automatique-et-robotique-auro)\n- [Lien vers la page moodle des cours](https://moodle.univ-tlse3.fr/course/index.php?categoryid=1269)\n- [Dendron Official Website](dendron.so)\n- [Dendron Wiki](https://wiki.dendron.so/)\n- [Dendron's Discord](https://discord.com/invite/xrKTUStHNZ)\n\n\n\n# Remerciement\n\nUn grand merci à GEA pour avoir mis à disposition les scans de ses notes !\n\nJe tiens aussi à remercier mes enseignants pour m'autoriser à prendre en photo les tableaux.\n\nLastly, a big thank you to everyone in [Dendron](dendron.so)'s team and the community for all their support.\n\n# Contact\n\nUn salon [Element](https://element.io/) est mis à disposition des lecteurs pour toutes questions/sugesstions ou pour faire remonter des erreurs/typos.\n\n\n[`#UT3-AURO-M2-2223-Request:matrix.org`](https://matrix.to/#/#UT3-AURO-M2-2223-Request:matrix.org)\n\n---\n\n> This website has been generated using [Dendron](dendron.so) and [GitHub Actions](https://github.com/features/actions).\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"assetsPrefix":"/UT3-AURO-2223-S10-Dendron","siteUrl":"https://tunnark.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}